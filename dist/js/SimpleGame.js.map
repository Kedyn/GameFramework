{"version":3,"sources":["js/node_modules/browser-pack/_prelude.js","js/src/framework/Game.ts","js/src/framework/InputHandler.ts","js/src/framework/SceneManager.ts","js/src/framework/Tools/KeyCode.ts","js/src/framework/Tools/constants.ts","js/src/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","SceneManager_1","constants_1","DEFAULT_GAME_OPTIONS","title","frame_rate","debug_mode","canvas","id","width","height","version","VERSION","Game","GetInstance","instance","prototype","create","options","this","checkOptions","checkCanvas","getContext","transform","time","Date","frame_counter","last_frame_time","getTime","log","init","SimpleSceneManager","currentScene","requestAnimationFrame","animate","getCanvas","message","console","document","getElementById","createElement","getElementsByTagName","appendChild","tagName","elapse","SimpleGame","interval","SECOND","update","render","KeyCode_1","constants_2","Game_1","InputHandler","keys","mouse_buttons","resetCallbacks","key","KEYCODE","int","parseInt","isNaN","MOUSE_BUTTON","LEFT","MIDDLE","RIGHT","mouse_pos","x","y","initiated","listen","type","callback","INPUT_TYPE","KEYDOWN","callbacks","onKeyDown","push","KEYUP","onKeyUp","MOUSE_MOVE","onMouseMove","MOUSE_DOWN","onMouseDown","MOUSE_UP","onMouseUp","removeListens","isKeyDown","mousePos","isMouseButtonDown","button","tabIndex","addEventListener","onclick","ev","oncontextmenu","onwheel","focus","preventDefault","SimpleInputHandler","keyCode","_i","_a","pageX","pageY","offsetLeft","offsetTop","InputHandler_1","SceneManager","scenes","input_handler","pushScene","scene","changeScene","onCurrentSceneExit","splice","onCurrentSceneEnter","popScene","pop","elapse_time","game_objects","enter","onEnter","looping","exit","onExit","pos","window","onload"],"mappings":"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","file":"SimpleGame.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { SimpleSceneManager } from './SceneManager';\r\nimport { VERSION, SECOND } from \"./Tools/constants\";\r\n\r\ninterface GameOptions {\r\n    title?: string,\r\n    frame_rate?: number,\r\n    debug_mode?: boolean,\r\n    canvas?: {\r\n        id: string,\r\n        width?: number,\r\n        height?: number,\r\n    },\r\n    version: string\r\n}\r\n\r\nconst DEFAULT_GAME_OPTIONS: GameOptions = {\r\n    title: \"Simple Game\",\r\n    frame_rate: 60,\r\n    debug_mode: true,\r\n    canvas: {\r\n        id: \"SimpleGame\",\r\n        width: 960,\r\n        height: 540\r\n    },\r\n    version: VERSION\r\n}\r\n\r\nclass Game {\r\n    public static GetInstance(): Game {\r\n        if (!Game.instance) {\r\n            Game.instance = new Game();\r\n        }\r\n        return Game.instance;\r\n    }\r\n    \r\n    public create(options?: GameOptions): boolean {\r\n        if (options) this.checkOptions(options);\r\n        else this.options = DEFAULT_GAME_OPTIONS;\r\n\r\n        if (this.checkCanvas()) {\r\n            this.canvas.getContext(\"2d\").transform(1, 0, 0, -1, 0, this.canvas.height);\r\n            \r\n            this.time = new Date();\r\n\r\n            this.frame_counter = 0;\r\n            this.last_frame_time = this.time.getTime();\r\n\r\n            this.log(\"Game creation successful\");\r\n            return true;\r\n        }\r\n        else {\r\n            this.log(\"Game creation failed\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public init(): boolean {\r\n        if (SimpleSceneManager.currentScene()) {\r\n            requestAnimationFrame(this.animate);\r\n            this.log(\"Initiating game animation\");\r\n            return true;\r\n        }\r\n        else {\r\n            this.log(\"Failed to initialize game [no game scene]\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public getCanvas(): HTMLCanvasElement {\r\n        return this.canvas;\r\n    }\r\n\r\n    public log(message: string): void {\r\n        if (this.options.debug_mode) console.log(this.options.title+\": \"+message+\"...\");\r\n    }\r\n\r\n    private static instance: Game;\r\n\r\n    private options: GameOptions;\r\n    private canvas: HTMLCanvasElement;\r\n    private time: Date;\r\n    private frame_counter: number;\r\n    private last_frame_time: number;\r\n\r\n    private constructor() {}    \r\n\r\n    private checkOptions(options: GameOptions): void {\r\n        if (!options.title) options.title = DEFAULT_GAME_OPTIONS.title;\r\n        if (!options.frame_rate) options.frame_rate = DEFAULT_GAME_OPTIONS.frame_rate;\r\n        if (!options.debug_mode) options.debug_mode = DEFAULT_GAME_OPTIONS.debug_mode;\r\n        if (!options.canvas) options.canvas = DEFAULT_GAME_OPTIONS.canvas;\r\n        else {\r\n            if (!options.canvas.id) options.canvas.id = DEFAULT_GAME_OPTIONS.canvas.id;\r\n            if (!options.canvas.width) options.canvas.width = DEFAULT_GAME_OPTIONS.canvas.width;\r\n            if (!options.canvas.height) options.canvas.height = DEFAULT_GAME_OPTIONS.canvas.height;\r\n        }\r\n        this.options = options;\r\n    }\r\n\r\n    private checkCanvas(): boolean {\r\n        let canvas = document.getElementById(this.options.canvas.id);\r\n        if (!canvas) {\r\n            canvas = document.createElement(\"canvas\");\r\n            (<HTMLCanvasElement>canvas).width = this.options.canvas.width;\r\n            (<HTMLCanvasElement>canvas).height = this.options.canvas.height;\r\n            document.getElementsByTagName(\"body\")[0].appendChild(canvas);\r\n        }\r\n        if (canvas.tagName === \"CANVAS\") {\r\n            this.canvas = <HTMLCanvasElement>canvas;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private animate(): void {\r\n        let time     = new Date();\r\n        let elapse   = time.getTime() - SimpleGame.last_frame_time;\r\n        let interval = SECOND / SimpleGame.options.frame_rate;\r\n\r\n        if (elapse > interval) {\r\n            SimpleSceneManager.update(elapse);\r\n            SimpleSceneManager.render(elapse);\r\n\r\n            SimpleGame.last_frame_time = time.getTime() - (elapse % interval);\r\n        }\r\n\r\n        requestAnimationFrame(SimpleGame.animate);\r\n    }\r\n}\r\n\r\nexport const SimpleGame: Game = Game.GetInstance();","import { INPUT_TYPE } from './Tools/constants';\r\nimport { KEYCODE } from './Tools/KeyCode';\r\nimport { MOUSE_BUTTON } from \"./Tools/constants\";\r\nimport { SimpleGame } from './Game';\r\n\r\ninterface mouse_callbacks {\r\n    onKeyDown:   Array<any>;\r\n    onKeyUp:     Array<any>;\r\n    onMouseMove: Array<any>;\r\n    onMouseDown: Array<any>;\r\n    onMouseUp:   Array<any>;\r\n}\r\n\r\nclass InputHandler {\r\n    public static GetInstance(): InputHandler {\r\n        if (!InputHandler.instance) {\r\n            InputHandler.instance = new InputHandler();\r\n        }\r\n\r\n        return InputHandler.instance;\r\n    }\r\n\r\n    public listen(type: INPUT_TYPE, callback: any): void {\r\n        if (!this.initiated) {\r\n            this.init();\r\n        }\r\n\r\n        if (type == INPUT_TYPE.KEYDOWN) {\r\n            this.callbacks.onKeyDown.push(callback);\r\n        }\r\n        else if (type == INPUT_TYPE.KEYUP) {\r\n            this.callbacks.onKeyUp.push(callback);\r\n        }\r\n        else if (type == INPUT_TYPE.MOUSE_MOVE) {\r\n            this.callbacks.onMouseMove.push(callback);\r\n        }\r\n        else if (type == INPUT_TYPE.MOUSE_DOWN) {\r\n            this.callbacks.onMouseDown.push(callback);\r\n        }\r\n        else if (type == INPUT_TYPE.MOUSE_UP) {\r\n            this.callbacks.onMouseUp.push(callback);\r\n        }\r\n    }\r\n\r\n    public removeListens(): void {\r\n        this.resetCallbacks();\r\n    }\r\n\r\n    public isKeyDown(key: KEYCODE): boolean {\r\n        if (this.keys[key]) {\r\n            return this.keys[key];\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public mousePos(): { x: number, y: number } {\r\n        return this.mouse_pos;\r\n    }\r\n\r\n    public isMouseButtonDown(button: MOUSE_BUTTON): boolean {\r\n        if (this.mouse_buttons[button]) {\r\n            return this.mouse_buttons[button];\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private static instance: InputHandler;\r\n\r\n    private keys:          boolean[];\r\n    private mouse_buttons: boolean[];\r\n    private mouse_pos:     { x: number, y: number };\r\n    private callbacks:     mouse_callbacks;\r\n    private initiated:     boolean;\r\n\r\n    private constructor() {\r\n        this.keys          = [];\r\n        this.mouse_buttons = [];\r\n\r\n        this.resetCallbacks();\r\n\r\n        for (let key in KEYCODE) {\r\n            let int = parseInt(key, 10);\r\n            if (!isNaN(int)) {\r\n                this.keys[int] = false;\r\n            }\r\n        }\r\n\r\n        this.mouse_buttons[MOUSE_BUTTON.LEFT] = false;\r\n        this.mouse_buttons[MOUSE_BUTTON.MIDDLE] = false;\r\n        this.mouse_buttons[MOUSE_BUTTON.RIGHT] = false;\r\n        \r\n        this.mouse_pos = { x: 0, y: 0 };\r\n\r\n        this.initiated = false;\r\n    }\r\n\r\n    private init(): void {\r\n        SimpleGame.getCanvas().tabIndex = 0;\r\n\r\n        SimpleGame.getCanvas().addEventListener(\"keydown\",   this.onKeyDown,   false);\r\n        SimpleGame.getCanvas().addEventListener(\"keyup\",     this.onKeyUp,     false);\r\n        SimpleGame.getCanvas().addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        SimpleGame.getCanvas().addEventListener(\"mousedown\", this.onMouseDown, false);\r\n        SimpleGame.getCanvas().addEventListener(\"mouseup\",   this.onMouseUp,   false);\r\n\r\n        SimpleGame.getCanvas().onclick       = (ev: MouseEvent)   => { return false; };\r\n        SimpleGame.getCanvas().oncontextmenu = (ev: PointerEvent) => { return false; };\r\n        SimpleGame.getCanvas().onwheel       = (ev: WheelEvent)   => { return false; };\r\n\r\n        SimpleGame.getCanvas().focus();\r\n\r\n        this.initiated = true;\r\n\r\n        SimpleGame.log(\"Input Handler initiated...\");\r\n    }\r\n\r\n    private resetCallbacks(): void {\r\n        this.callbacks = {\r\n            onKeyDown  :  [],\r\n            onKeyUp    :  [],\r\n            onMouseMove:  [],\r\n            onMouseDown:  [],\r\n            onMouseUp  :  []\r\n        };\r\n    }\r\n\r\n    private onKeyDown(ev: KeyboardEvent): void {\r\n        ev.preventDefault();\r\n        SimpleInputHandler.keys[ev.keyCode] = true;\r\n\r\n        for (let callback of SimpleInputHandler.callbacks[\"onKeyDown\"]) {\r\n            callback(ev.keyCode);\r\n        }\r\n    }\r\n\r\n    private onKeyUp(ev: KeyboardEvent): void {\r\n        SimpleInputHandler.keys[ev.keyCode] = false;\r\n\r\n        for (let callback of SimpleInputHandler.callbacks[\"onKeyUp\"]) {\r\n            callback(ev.keyCode);\r\n        }\r\n    }\r\n\r\n    private onMouseMove(ev: MouseEvent): void {\r\n        let x: number = ev.pageX;\r\n        let y: number = ev.pageY;\r\n\r\n        x -= SimpleGame.getCanvas().offsetLeft;\r\n        y -= SimpleGame.getCanvas().offsetTop;\r\n\r\n        SimpleInputHandler.mouse_pos.x = x;\r\n        SimpleInputHandler.mouse_pos.y = y;\r\n\r\n        for (let callback of SimpleInputHandler.callbacks[\"onMouseMove\"]) {\r\n            callback(SimpleInputHandler.mouse_pos);\r\n        }\r\n    }\r\n\r\n    private onMouseDown(ev: MouseEvent): void {\r\n        SimpleInputHandler.mouse_buttons[ev.button] = true;\r\n        \r\n        for (let callback of SimpleInputHandler.callbacks[\"onMouseDown\"]) {\r\n            callback(ev.button, SimpleInputHandler.mouse_pos);\r\n        }\r\n    }\r\n\r\n    private onMouseUp(ev: MouseEvent): void {\r\n        SimpleInputHandler.mouse_buttons[ev.button] = false;\r\n\r\n        for (let callback of SimpleInputHandler.callbacks[\"onMouseUp\"]) {\r\n            callback(ev.button, SimpleInputHandler.mouse_pos);\r\n        }\r\n    }\r\n}\r\n\r\nexport const SimpleInputHandler: InputHandler = InputHandler.GetInstance();","import { SimpleGame } from \"./Game\";\r\nimport { Scene } from \"./Scene\";\r\nimport { SimpleInputHandler } from './InputHandler';\r\nimport { KEYCODE } from \"./Tools/KeyCode\";\r\nimport { INPUT_TYPE, MOUSE_BUTTON } from \"./Tools/constants\";\r\n\r\nclass SceneManager {\r\n    public static GetInstance(): SceneManager {\r\n        if (!SceneManager.instance) {\r\n            SceneManager.instance = new SceneManager();\r\n        }\r\n        \r\n        return SceneManager.instance;\r\n    }\r\n\r\n    public pushScene(scene: Scene): void {\r\n        if (!this.input_handler) {\r\n            SimpleInputHandler.listen(INPUT_TYPE.KEYDOWN   , this.onKeyDown);\r\n            SimpleInputHandler.listen(INPUT_TYPE.KEYUP     , this.onKeyUp);\r\n            SimpleInputHandler.listen(INPUT_TYPE.MOUSE_MOVE, this.onMouseMove);\r\n            SimpleInputHandler.listen(INPUT_TYPE.MOUSE_DOWN, this.onMouseDown);\r\n            SimpleInputHandler.listen(INPUT_TYPE.MOUSE_UP  , this.onMouseUp);\r\n            \r\n            this.input_handler = true;\r\n        }\r\n        this.scenes.push(scene);\r\n    }\r\n\r\n    public changeScene(scene: Scene): void {\r\n        if (this.scenes.length) {\r\n            if (this.scenes[this.scenes.length - 1].id != scene.id) {\r\n                this.scenes.push(scene);\r\n                if (this.onCurrentSceneExit()) {\r\n                    this.scenes.splice(this.scenes.length - 2, 1);\r\n                    //SimpleInputHandler.removeListens();\r\n                }\r\n                else {\r\n                    SimpleGame.log(\"Error exiting scene \" + this.currentScene().id);\r\n                }\r\n                if (!this.onCurrentSceneEnter()) {\r\n                    SimpleGame.log(\"Error while changing scene\");\r\n                }\r\n            }\r\n            else {\r\n                SimpleGame.log(\"Cannot change to the same scene\");\r\n            }\r\n        }\r\n        else {\r\n            SimpleGame.log(\"Cannot change scene when there are no current scenes\");\r\n        }\r\n    }\r\n\r\n    public popScene(): void {\r\n        if (this.scenes.length > 1) {\r\n            if (this.onCurrentSceneExit()) {\r\n                this.scenes.pop();\r\n                //SimpleInputHandler.removeListens();\r\n            }\r\n        }\r\n    }\r\n\r\n    public currentScene(): Scene {\r\n        return this.scenes[this.scenes.length - 1];\r\n    }\r\n\r\n    public update(elapse_time: number): void {\r\n        this.currentScene().update(elapse_time);\r\n        for (let game_object of this.currentScene().game_objects) {\r\n            game_object.update();\r\n        }\r\n    }\r\n\r\n    public render(elapse_time: number): void {\r\n        this.currentScene().render(elapse_time);\r\n        for (let game_object of this.currentScene().game_objects) {\r\n            game_object.render();\r\n        }\r\n    }\r\n    \r\n    private static instance: SceneManager;\r\n\r\n    private scenes:        Scene[];\r\n    private input_handler: boolean;\r\n\r\n    private constructor() {\r\n        this.scenes = [];\r\n        this.input_handler = false;\r\n    }\r\n\r\n    private onCurrentSceneEnter(): boolean {\r\n        let enter = false;\r\n        if (this.currentScene().onEnter()) {\r\n            enter = true;\r\n            let i = 0;\r\n            let looping = true;\r\n            let game_objects = this.currentScene().game_objects;\r\n            while (looping) {\r\n                if (i < game_objects.length) {\r\n                    if (!game_objects[i].onEnter()) {\r\n                        enter = false;\r\n                        looping = false;\r\n                    }\r\n                }\r\n                else {\r\n                    looping = false;\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        return enter;\r\n    }\r\n\r\n    private onCurrentSceneExit(): boolean {\r\n        let exit = false;\r\n        if (this.currentScene().onExit()) {\r\n            exit = true;\r\n            let i = 0;\r\n            let looping = true;\r\n            let game_objects = this.currentScene().game_objects;\r\n            while (looping) {\r\n                if (i < game_objects.length) {\r\n                    if (!game_objects[i].onExit()) {\r\n                        exit = false;\r\n                        looping = false;\r\n                    }\r\n                }\r\n                else {\r\n                    looping = false;\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        return exit;\r\n    }\r\n\r\n    private onKeyDown(key: KEYCODE): void {\r\n        SimpleSceneManager.currentScene().onKeyDown(key);\r\n        for (let game_object of SimpleSceneManager.currentScene().game_objects) {\r\n            game_object.onKeyDown(key);\r\n        }\r\n    }\r\n\r\n    private onKeyUp(key: KEYCODE): void {\r\n        SimpleSceneManager.currentScene().onKeyUp(key);\r\n        for (let game_object of SimpleSceneManager.currentScene().game_objects) {\r\n            game_object.onKeyUp(key);\r\n        }\r\n    }\r\n\r\n    private onMouseMove(pos: { x: number, y: number }): void {\r\n        SimpleSceneManager.currentScene().onMouseMove(pos.x, pos.y);\r\n        for (let game_object of SimpleSceneManager.currentScene().game_objects) {\r\n            game_object.onMouseMove(pos.x, pos.y);\r\n        }\r\n    }\r\n\r\n    private onMouseDown(button: MOUSE_BUTTON, pos: { x: number, y: number }): void {\r\n        SimpleSceneManager.currentScene().onMouseDown(button, pos.x, pos.y);\r\n        for (let game_object of SimpleSceneManager.currentScene().game_objects) {\r\n            game_object.onMouseDown(button, pos.x, pos.y);\r\n        }\r\n    }\r\n\r\n    private onMouseUp(button: MOUSE_BUTTON, pos: { x: number, y: number }): void {\r\n        SimpleSceneManager.currentScene().onMouseUp(button, pos.x, pos.y);\r\n        for (let game_object of SimpleSceneManager.currentScene().game_objects) {\r\n            game_object.onMouseUp(button, pos.x, pos.y);\r\n        }\r\n    }\r\n}\r\n\r\nexport const SimpleSceneManager: SceneManager = SceneManager.GetInstance();","export enum KEYCODE {\r\n    BACKSPACE = 8,\r\n    TAB = 9,\r\n    ENTER = 13,\r\n    SHIFT = 16,\r\n    CTRL = 17,\r\n    ALT = 18,\r\n    PAUSE = 19,\r\n    CAPS_LOCK = 20,\r\n    ESCAPE = 27,\r\n    SPACE = 32,\r\n    PAGE_UP = 33,\r\n    PAGE_DOWN = 34,\r\n    END = 35,\r\n    HOME = 36,\r\n    LEFT_ARROW = 37,\r\n    UP_ARROW = 38,\r\n    RIGHT_ARROW = 39,\r\n    DOWN_ARROW = 40,\r\n    INSERT = 45,\r\n    DELETE = 46,\r\n    KEY_0 = 48,\r\n    KEY_1 = 49,\r\n    KEY_2 = 50,\r\n    KEY_3 = 51,\r\n    KEY_4 = 52,\r\n    KEY_5 = 53,\r\n    KEY_6 = 54,\r\n    KEY_7 = 55,\r\n    KEY_8 = 56,\r\n    KEY_9 = 57,\r\n    KEY_A = 65,\r\n    KEY_B = 66,\r\n    KEY_C = 67,\r\n    KEY_D = 68,\r\n    KEY_E = 69,\r\n    KEY_F = 70,\r\n    KEY_G = 71,\r\n    KEY_H = 72,\r\n    KEY_I = 73,\r\n    KEY_J = 74,\r\n    KEY_K = 75,\r\n    KEY_L = 76,\r\n    KEY_M = 77,\r\n    KEY_N = 78,\r\n    KEY_O = 79,\r\n    KEY_P = 80,\r\n    KEY_Q = 81,\r\n    KEY_R = 82,\r\n    KEY_S = 83,\r\n    KEY_T = 84,\r\n    KEY_U = 85,\r\n    KEY_V = 86,\r\n    KEY_W = 87,\r\n    KEY_X = 88,\r\n    KEY_Y = 89,\r\n    KEY_Z = 90,\r\n    LEFT_META = 91,\r\n    RIGHT_META = 92,\r\n    SELECT = 93,\r\n    NUMPAD_0 = 96,\r\n    NUMPAD_1 = 97,\r\n    NUMPAD_2 = 98,\r\n    NUMPAD_3 = 99,\r\n    NUMPAD_4 = 100,\r\n    NUMPAD_5 = 101,\r\n    NUMPAD_6 = 102,\r\n    NUMPAD_7 = 103,\r\n    NUMPAD_8 = 104,\r\n    NUMPAD_9 = 105,\r\n    MULTIPLY = 106,\r\n    ADD = 107,\r\n    SUBTRACT = 109,\r\n    DECIMAL = 110,\r\n    DIVIDE = 111,\r\n    F1 = 112,\r\n    F2 = 113,\r\n    F3 = 114,\r\n    F4 = 115,\r\n    F5 = 116,\r\n    F6 = 117,\r\n    F7 = 118,\r\n    F8 = 119,\r\n    F9 = 120,\r\n    F10 = 121,\r\n    F11 = 122,\r\n    F12 = 123,\r\n    NUM_LOCK = 144,\r\n    SCROLL_LOCK = 145,\r\n    SEMICOLON = 186,\r\n    EQUALS = 187,\r\n    COMMA = 188,\r\n    DASH = 189,\r\n    PERIOD = 190,\r\n    FORWARD_SLASH = 191,\r\n    GRAVE_ACCENT = 192,\r\n    OPEN_BRACKET = 219,\r\n    BACK_SLASH = 220,\r\n    CLOSE_BRACKET = 221,\r\n    SINGLE_QUOTE = 222\r\n}","export const VERSION: string = \"0.0.2\";\r\n\r\nexport const SECOND: number = 1000;\r\n\r\nexport enum INPUT_TYPE {\r\n    KEYDOWN,\r\n    KEYUP,\r\n    MOUSE_MOVE,\r\n    MOUSE_DOWN,\r\n    MOUSE_UP\r\n}\r\n\r\nexport enum MOUSE_BUTTON {\r\n    LEFT,\r\n    MIDDLE,\r\n    RIGHT\r\n}","import { SimpleGame } from \"./framework/Game\";\r\nimport { SimpleSceneManager } from \"./framework/SceneManager\";\r\n//import your scene\r\n\r\nwindow.onload = function () {\r\n    SimpleGame.create();\r\n    //SimpleSceneManager.pushScene(); add your scene\r\n    SimpleGame.init();\r\n}"]}